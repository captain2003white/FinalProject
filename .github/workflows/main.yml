name: ML Pipeline CI/CD

on:
  push:
    branches: [dev, staging, main]
  pull_request:
    branches: [dev, staging, main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        python -m pytest tests/ -v
        
    - name: Format check with Black
      run: |
        pip install black
        black --check . || true

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: |
        docker build -t mlops-app:latest .
        
    - name: Test Docker image
      run: |
        docker run --rm mlops-app:latest python -c "import pandas as pd; print('Docker test successful!')"

  dvc-demo:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
  
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
      
    - name: Install and demonstrate DVC
      run: |
        python -m pip install --upgrade pip
        pip install "dvc>=2.0.0" "dvc-azure>=2.0.0"
        dvc status || echo "DVC status check completed"
        dvc version
        dvc doctor
        echo "DVC is installed and working correctly"